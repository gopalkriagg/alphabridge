<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.jbridge.presentation.gui.MainControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2016-10-19T12:43:18" hostname="gopal-pc" time="0.045">
  <properties/>
  <testcase name="testWhenBiddingStartsVulnerabilityIsSetOnBiddingView" classname="org.jbridge.presentation.gui.MainControllerTest" time="0.01"/>
  <testcase name="testWhenGameStartsScoreIsSetOnDealView" classname="org.jbridge.presentation.gui.MainControllerTest" time="0.026"/>
  <testcase name="testScorePreservedBetweenGames" classname="org.jbridge.presentation.gui.MainControllerTest" time="0.005"/>
  <testcase name="testWhenGameStartsVulnerabilityOnScoringTrackerIsReset" classname="org.jbridge.presentation.gui.MainControllerTest" time="0.001"/>
  <testcase name="testNewGameResetsVulnerabilityOnScoringTrackerIsReset" classname="org.jbridge.presentation.gui.MainControllerTest" time="0.002"/>
  <system-out><![CDATA[game.getWest().init(Six.of(Spades.i()), Eight.of(Clubs.i()), Nine.of(Diamonds.i()), Seven.of(Clubs.i()), Eight.of(Hearts.i()), Four.of(Clubs.i()), Nine.of(Clubs.i()), Three.of(Clubs.i()), King.of(Spades.i()), Queen.of(Clubs.i()), Jack.of(Hearts.i()), Six.of(Hearts.i()), Eight.of(Spades.i()));
game.getNorth().init(Ten.of(Clubs.i()), Queen.of(Spades.i()), Ten.of(Spades.i()), Queen.of(Diamonds.i()), Two.of(Clubs.i()), Two.of(Diamonds.i()), Six.of(Diamonds.i()), Five.of(Clubs.i()), Two.of(Hearts.i()), King.of(Clubs.i()), Jack.of(Diamonds.i()), Seven.of(Hearts.i()), Ace.of(Diamonds.i()));
game.getEast().init(Two.of(Spades.i()), Ten.of(Diamonds.i()), Ace.of(Hearts.i()), King.of(Diamonds.i()), Seven.of(Diamonds.i()), Four.of(Diamonds.i()), Five.of(Spades.i()), Queen.of(Hearts.i()), Six.of(Clubs.i()), Three.of(Hearts.i()), Three.of(Diamonds.i()), Four.of(Spades.i()), Ace.of(Clubs.i()));
game.getSouth().init(Five.of(Hearts.i()), Jack.of(Clubs.i()), King.of(Hearts.i()), Ace.of(Spades.i()), Nine.of(Spades.i()), Ten.of(Hearts.i()), Nine.of(Hearts.i()), Four.of(Hearts.i()), Five.of(Diamonds.i()), Jack.of(Spades.i()), Seven.of(Spades.i()), Eight.of(Diamonds.i()), Three.of(Spades.i()));
game.setNextToPlay(Direction.WEST);
game.setTrump(NoTrump.i());
game.getWest().init(Two.of(Hearts.i()), Two.of(Diamonds.i()), Ace.of(Diamonds.i()), Eight.of(Clubs.i()), Seven.of(Spades.i()), Ten.of(Spades.i()), Seven.of(Diamonds.i()), Four.of(Clubs.i()), Jack.of(Hearts.i()), Three.of(Spades.i()), Queen.of(Clubs.i()), Six.of(Diamonds.i()), King.of(Spades.i()));
game.getNorth().init(King.of(Hearts.i()), Seven.of(Hearts.i()), Nine.of(Clubs.i()), Jack.of(Clubs.i()), Eight.of(Spades.i()), Three.of(Diamonds.i()), Four.of(Hearts.i()), Five.of(Diamonds.i()), Ten.of(Clubs.i()), Nine.of(Spades.i()), Four.of(Spades.i()), Eight.of(Diamonds.i()), Ten.of(Hearts.i()));
game.getEast().init(Five.of(Clubs.i()), Nine.of(Hearts.i()), Three.of(Hearts.i()), Queen.of(Spades.i()), Five.of(Hearts.i()), Nine.of(Diamonds.i()), Jack.of(Diamonds.i()), Six.of(Hearts.i()), Queen.of(Diamonds.i()), Eight.of(Hearts.i()), Four.of(Diamonds.i()), Six.of(Clubs.i()), King.of(Diamonds.i()));
game.getSouth().init(Two.of(Spades.i()), Ace.of(Spades.i()), Five.of(Spades.i()), Six.of(Spades.i()), Ten.of(Diamonds.i()), Queen.of(Hearts.i()), King.of(Clubs.i()), Seven.of(Clubs.i()), Two.of(Clubs.i()), Three.of(Clubs.i()), Ace.of(Hearts.i()), Jack.of(Spades.i()), Ace.of(Clubs.i()));
game.setNextToPlay(Direction.WEST);
game.setTrump(NoTrump.i());
game.getWest().init(Four.of(Diamonds.i()), Ten.of(Hearts.i()), Nine.of(Clubs.i()), Eight.of(Spades.i()), Ace.of(Diamonds.i()), Six.of(Spades.i()), Seven.of(Spades.i()), Eight.of(Diamonds.i()), Eight.of(Hearts.i()), Five.of(Hearts.i()), Ten.of(Diamonds.i()), Four.of(Hearts.i()), King.of(Spades.i()));
game.getNorth().init(Four.of(Spades.i()), Queen.of(Spades.i()), King.of(Clubs.i()), Three.of(Spades.i()), Three.of(Hearts.i()), King.of(Diamonds.i()), Jack.of(Clubs.i()), Ace.of(Spades.i()), Ten.of(Spades.i()), Jack.of(Hearts.i()), Three.of(Clubs.i()), Jack.of(Diamonds.i()), Five.of(Diamonds.i()));
game.getEast().init(Two.of(Hearts.i()), Queen.of(Diamonds.i()), Seven.of(Hearts.i()), Two.of(Clubs.i()), Six.of(Clubs.i()), Five.of(Clubs.i()), Two.of(Diamonds.i()), Nine.of(Hearts.i()), Eight.of(Clubs.i()), Three.of(Diamonds.i()), Six.of(Diamonds.i()), Ace.of(Clubs.i()), Ace.of(Hearts.i()));
game.getSouth().init(Five.of(Spades.i()), Nine.of(Diamonds.i()), Two.of(Spades.i()), Queen.of(Clubs.i()), Four.of(Clubs.i()), Jack.of(Spades.i()), Seven.of(Clubs.i()), Seven.of(Diamonds.i()), Ten.of(Clubs.i()), Six.of(Hearts.i()), Nine.of(Spades.i()), King.of(Hearts.i()), Queen.of(Hearts.i()));
game.setNextToPlay(Direction.WEST);
game.setTrump(NoTrump.i());
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
